# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "feat/init-ci" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.event.repository.name }}
  IMAGE_TAG: latest
  PORT: ${{ secrets.SERVER_PORT }}

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: chmod for gradlew
      run: chmod -x ./gradlew
        
    - name: Build with Gradle
      run: ./gradlew bootJar -x test
    
    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        local: "build/libs/proxy_hub-0.0.1-SNAPSHOT.jar"
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.DOCKER_HUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
